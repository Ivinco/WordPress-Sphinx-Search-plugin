##########################
# WARNING: it is not original sphinx.conf - this file adopted to sphinx
# which installed by wordpress Sphinx Search plugin.
# Don't use this file as example of sphinx configuration,
# better visit the official doc page at http://www.sphinxsearch.com/doc.html
##########################


source {prefix}main_posts
{
    type    = mysql
    sql_host    = {db_host}
    sql_user    = {db_user}
    sql_pass    = {db_pass}
    sql_db        = {db_name}
  {sql_sock}
    sql_port    = 3306    # optional, default is 3306
    sql_query_pre    = SET NAMES utf8
    sql_query_pre    = REPLACE INTO {table_prefix}sph_counter SELECT 1, IF(0 < MAX(id), MAX(id), 1) FROM {wp_posts}
        sql_query_range    = SELECT IF(0 < MIN(id), MIN(id), 1),( SELECT max_doc_id FROM {table_prefix}sph_counter WHERE counter_id=1 ) FROM {wp_posts}
        sql_range_step = 1000

    sql_query        = select \
        p.ID*2+1 as ID, \
        0 as comment_ID,\
        p.ID as post_ID,\
        p.post_title as title, \
        p.post_content as body, \
        t.name as category, \
        IF(p.post_type = 'post', 1, 0) as isPost, \
        0 as isComment, \
        IF(p.post_type = 'page', 1, 0) as isPage, \
        IF(p.post_type = 'post', 0, IF(p.post_type = 'page', 1, 2)) as post_type, \
        UNIX_TIMESTAMP(post_date) AS date_added, \
        GROUP_CONCAT(DISTINCT tag_t.name) as tags \
    from \
        {wp_posts} as p \
    left join \
        {wp_term_relationships} tr on (p.ID = tr.object_id) \
    left join \
        {wp_term_taxonomy} tt on (tt.term_taxonomy_id = tr.term_taxonomy_id and tt.taxonomy = 'category') \
    left join \
        {wp_terms} t on (tt.term_id = t.term_id) \
    left join \
        {wp_term_relationships} tag_tr on (p.ID = tag_tr.object_id) \
    left join \
        {wp_term_taxonomy} tag_tt on (tag_tt.term_taxonomy_id = tag_tr.term_taxonomy_id and tag_tt.taxonomy = 'post_tag') \
    left join \
        {wp_terms} tag_t on (tag_tt.term_id = tag_t.term_id) \
    where \
        p.id>=$start AND p.id<=$end and \
        p.post_status = 'publish' \
        group by p.ID

    sql_attr_uint        = comment_ID
    sql_attr_uint        = post_ID
    sql_attr_uint        = isPost
    sql_attr_uint        = isPage
    sql_attr_uint        = isComment
    sql_attr_uint        = post_type
    sql_attr_timestamp    = date_added
}

source {prefix}main_comments
{
    type    = mysql
    sql_host    = {db_host}
    sql_user    = {db_user}
    sql_pass    = {db_pass}
    sql_db        = {db_name}
  {sql_sock}
    sql_port    = 3306    # optional, default is 3306
    sql_query_pre    = SET NAMES utf8
    sql_query_pre    = REPLACE INTO {table_prefix}sph_counter SELECT 2, IF(0 < MAX(comment_id), MAX(comment_id), 1) FROM {wp_comments}
        sql_query_range    = SELECT IF(0 < MIN(comment_id), MIN(comment_id), 1),( SELECT max_doc_id FROM {table_prefix}sph_counter WHERE counter_id=2 ) FROM {wp_comments}
        sql_range_step = 1000

    sql_query        = select \
        c.comment_ID*2 as ID, \
        c.comment_ID as comment_ID,\
        c.comment_post_ID as post_ID,\
        '' as title, \
        c.comment_content as body, \
        '' as category, \
        0 as isPost, \
        1 as isComment, \
        0 as isPage, \
        2 as post_type, \
        UNIX_TIMESTAMP(comment_date) AS date_added, \
        '' as tags \
    from \
        {wp_comments} as c \
    where \
        c.comment_id>=$start AND c.comment_id<=$end and \
        c.comment_approved = '1';

    sql_attr_uint        = comment_ID
    sql_attr_uint        = post_ID
    sql_attr_uint        = isPost
    sql_attr_uint        = isPage
    sql_attr_uint        = isComment
    sql_attr_uint        = post_type
    sql_attr_timestamp    = date_added
}

source {prefix}delta_posts : {prefix}main_posts
{
    sql_query_range    = SELECT ( SELECT max_doc_id FROM {table_prefix}sph_counter where counter_id = 1 ), IF ( 0 < MAX(id), MAX(id), 1) FROM {wp_posts}
    sql_range_step = 1000
    sql_query_pre    = SET NAMES utf8

    sql_query    = select \
        p.ID*2+1 as ID, \
        0 as comment_ID,\
        p.ID as post_ID,\
        p.post_title as title, \
        p.post_content as body, \
        t.name as category, \
        IF(p.post_type = 'post', 1, 0) as isPost, \
        0 as isComment, \
        IF(p.post_type = 'page', 1, 0) as isPage, \
        IF(p.post_type = 'post', 0, IF(p.post_type = 'page', 1, 2)) as post_type, \
        UNIX_TIMESTAMP(post_date) AS date_added, \
        GROUP_CONCAT(DISTINCT tag_t.name) as tags \
    from \
        {wp_posts} as p \
    left join \
        {wp_term_relationships} tr on (p.ID = tr.object_id) \
    left join \
        {wp_term_taxonomy} tt on (tt.term_taxonomy_id = tr.term_taxonomy_id and tt.taxonomy = 'category') \
    left join \
        {wp_terms} t on (tt.term_id = t.term_id) \
    left join \
        {wp_term_relationships} tag_tr on (p.ID = tag_tr.object_id) \
    left join \
        {wp_term_taxonomy} tag_tt on (tag_tt.term_taxonomy_id = tag_tr.term_taxonomy_id and tag_tt.taxonomy = 'post_tag') \
    left join \
        {wp_terms} tag_t on (tag_tt.term_id = tag_t.term_id) \
    where \
                 p.id>$start AND p.id<=$end and \
        p.post_status = 'publish' \
        group by p.ID ;
}

source {prefix}delta_comments : {prefix}main_comments
{
    sql_query_range    = SELECT ( SELECT max_doc_id FROM {table_prefix}sph_counter where counter_id = 2 ), IF ( 0 < MAX(comment_id), MAX(comment_id), 1) FROM {wp_comments}
    sql_range_step = 1000
    sql_query_pre    = SET NAMES utf8

    sql_query    = select \
        c.comment_ID*2 as ID, \
        c.comment_ID as comment_ID,\
        c.comment_post_ID as post_ID,\
        '' as title, \
        c.comment_content as body, \
        '' as category, \
        0 as isPost, \
        1 as isComment, \
        0 as isPage, \
        2 as post_type, \
        UNIX_TIMESTAMP(comment_date) AS date_added, \
        '' as tags \
    from \
        {wp_comments} as c \
    where \
        c.comment_id>$start AND c.comment_id<=$end and \
        c.comment_approved = '1';
}

index {prefix}main
{
    source    = {prefix}main_posts
    source    = {prefix}main_comments
    path    = {sphinx_path}/var/data/{prefix}main
    docinfo    = extern
    morphology    = stem_enru
    html_strip        = 1
    charset_type    = utf-8
    charset_table    = 0..9,U+27, U+41..U+5a->U+61..U+7a,  U+61..U+7a, U+aa, U+b5, U+ba, U+c0..U+d6->U+e0..U+f6,  U+d8..U+de->U+f8..U+fe,  U+df..U+f6,  U+f8..U+ff,  U+100..U+12f/2,  U+130->U+69,  U+131,  U+132..U+137/2,  U+138,  U+139..U+148/2,  U+149,  U+14a..U+177/2,  U+178->U+ff,  U+179..U+17e/2,  U+17f..U+180,  U+181->U+253,  U+182..U+185/2,  U+186->U+254,  U+187..U+188/2,  U+189..U+18a->U+256..U+257,  U+18b..U+18c/2,  U+18d,  U+18e->U+1dd,  U+18f->U+259,  U+190->U+25b,  U+191..U+192/2,  U+193->U+260,  U+194->U+263,  U+195,  U+196->U+269,  U+197->U+268,  U+198..U+199/2,  U+19a..U+19b,  U+19c->U+26f,  U+19d->U+272,  U+19e,  U+19f->U+275,  U+1a0..U+1a5/2,  U+1a6->U+280,  U+1a7..U+1a8/2,  U+1a9->U+283,  U+1aa..U+1ab,  U+1ac..U+1ad/2,  U+1ae->U+288,  U+1af..U+1b0/2,  U+1b1..U+1b2->U+28a..U+28b,  U+1b3..U+1b6/2,  U+1b7->U+292,  U+1b8..U+1b9/2,  U+1ba..U+1bb,  U+1bc..U+1bd/2,  U+1be..U+1c3,  U+1c4->U+1c6,  U+1c5..U+1c6/2,  U+1c7->U+1c9,  U+1c8..U+1c9/2,  U+1ca->U+1cc,  U+1cb..U+1dc/2,  U+1dd,  U+1de..U+1ef/2,  U+1f0,  U+1f1->U+1f3,  U+1f2..U+1f5/2,  U+1f6->U+195,  U+1f7->U+1bf,  U+1f8..U+21f/2,  U+220->U+19e,  U+221,  U+222..U+233/2,  U+234..U+23a,  U+23b..U+23c/2,  U+23d->U+19a,  U+23e..U+240,  U+241->U+294,  U+250..U+2c1,  U+2c6..U+2d1,  U+2e0..U+2e4,  U+2ee,  U+37a,  U+386..U+389->U+3ac..U+3af,  U+38c..U+38e->U+3cc..U+3ce,  U+390,  U+391..U+3a1->U+3b1..U+3c1,  U+3a3..U+3ab->U+3c3..U+3cb,  U+3ac..U+3ce,  U+3d0..U+3d7,  U+3d8..U+3ef/2,  U+3f0..U+3f3,  U+3f4->U+3b8,  U+3f5,  U+3f7..U+3f8/2,  U+3f9->U+3f2,  U+3fa..U+3fb/2,  U+3fc..U+3ff,  U+400..U+40f->U+450..U+45f,  U+410..U+42f->U+430..U+44f,  U+430..U+45f,  U+460..U+481/2,  U+48a..U+4bf/2,  U+4c0,  U+4c1..U+4ce/2,  U+4d0..U+4f9/2,  U+500..U+50f/2,  U+531..U+556->U+561..U+586,  U+559,  U+561..U+587,  U+5d0..U+5ea,  U+5f0..U+5f2,  U+621..U+63a,  U+640..U+64a,  U+66e..U+66f,  U+671..U+6d3,  U+6d5,  U+6e5..U+6e6,  U+6ee..U+6ef,  U+6fa..U+6fc,  U+6ff,  U+e01..U+e30,  U+e32..U+e33,  U+e40..U+e46,  U+e81..U+e82,  U+e84,  U+e87..U+e88,  U+e8a,  U+e8d,  U+e94..U+e97,  U+e99..U+e9f,  U+ea1..U+ea3,  U+ea5,  U+ea7,  U+eaa..U+eab,  U+ead..U+eb0,  U+eb2..U+eb3,  U+ebd,  U+ec0..U+ec4,  U+ec6,  U+edc..U+edd,  U+1000..U+1021,  U+1023..U+1027,  U+1029..U+102a,  U+1050..U+1055,  U+10a0..U+10c5->U+2d00..U+2d25,  U+10d0..U+10fa,  U+10fc,  U+2d00..U+2d25,  U+1d00..U+1dbf,  U+1e00..U+1e95/2,  U+1e96..U+1e9b,  U+1ea0..U+1ef9/2,  U+3005..U+3006,  U+3031..U+3035,  U+303b..U+303c,  U+3041..U+3096,  U+309d..U+309f,  U+30a1..U+30fa,  U+30fc..U+30ff,  U+31f0..U+31ff

}

index {prefix}delta : {prefix}main
{
    source    = {prefix}delta_posts
    source    = {prefix}delta_comments
    path    = {sphinx_path}/var/data/{prefix}delta
}

index {prefix}
{
    type    = distributed
    local    = {prefix}main
    local    = {prefix}delta
}

source {prefix}stats
{
    type    = mysql
    sql_host    = {db_host}
    sql_user    = {db_user}
    sql_pass    = {db_pass}
    sql_db        = {db_name}
  {sql_sock}
    sql_port    = 3306    # optional, default is 3306
    sql_query_pre    = SET NAMES utf8

    sql_query    =  select id, keywords, status, crc32(keywords) as keywords_crc,\
    UNIX_TIMESTAMP(date_added) as date_added \
    from {table_prefix}sph_stats;

    sql_attr_uint    = status
    sql_attr_uint       = keywords_crc
    sql_attr_timestamp    = date_added
}

index {prefix}stats
{
    source    = {prefix}stats
    path    = {sphinx_path}/var/data/{prefix}stats
    docinfo    = extern
    morphology    = stem_enru
    html_strip        = 1
    charset_type    = utf-8
    charset_table    = 0..9, U+27, U+41..U+5a->U+61..U+7a,  U+61..U+7a, U+aa, U+b5, U+ba, U+c0..U+d6->U+e0..U+f6,  U+d8..U+de->U+f8..U+fe,  U+df..U+f6,  U+f8..U+ff,  U+100..U+12f/2,  U+130->U+69,  U+131,  U+132..U+137/2,  U+138,  U+139..U+148/2,  U+149,  U+14a..U+177/2,  U+178->U+ff,  U+179..U+17e/2,  U+17f..U+180,  U+181->U+253,  U+182..U+185/2,  U+186->U+254,  U+187..U+188/2,  U+189..U+18a->U+256..U+257,  U+18b..U+18c/2,  U+18d,  U+18e->U+1dd,  U+18f->U+259,  U+190->U+25b,  U+191..U+192/2,  U+193->U+260,  U+194->U+263,  U+195,  U+196->U+269,  U+197->U+268,  U+198..U+199/2,  U+19a..U+19b,  U+19c->U+26f,  U+19d->U+272,  U+19e,  U+19f->U+275,  U+1a0..U+1a5/2,  U+1a6->U+280,  U+1a7..U+1a8/2,  U+1a9->U+283,  U+1aa..U+1ab,  U+1ac..U+1ad/2,  U+1ae->U+288,  U+1af..U+1b0/2,  U+1b1..U+1b2->U+28a..U+28b,  U+1b3..U+1b6/2,  U+1b7->U+292,  U+1b8..U+1b9/2,  U+1ba..U+1bb,  U+1bc..U+1bd/2,  U+1be..U+1c3,  U+1c4->U+1c6,  U+1c5..U+1c6/2,  U+1c7->U+1c9,  U+1c8..U+1c9/2,  U+1ca->U+1cc,  U+1cb..U+1dc/2,  U+1dd,  U+1de..U+1ef/2,  U+1f0,  U+1f1->U+1f3,  U+1f2..U+1f5/2,  U+1f6->U+195,  U+1f7->U+1bf,  U+1f8..U+21f/2,  U+220->U+19e,  U+221,  U+222..U+233/2,  U+234..U+23a,  U+23b..U+23c/2,  U+23d->U+19a,  U+23e..U+240,  U+241->U+294,  U+250..U+2c1,  U+2c6..U+2d1,  U+2e0..U+2e4,  U+2ee,  U+37a,  U+386..U+389->U+3ac..U+3af,  U+38c..U+38e->U+3cc..U+3ce,  U+390,  U+391..U+3a1->U+3b1..U+3c1,  U+3a3..U+3ab->U+3c3..U+3cb,  U+3ac..U+3ce,  U+3d0..U+3d7,  U+3d8..U+3ef/2,  U+3f0..U+3f3,  U+3f4->U+3b8,  U+3f5,  U+3f7..U+3f8/2,  U+3f9->U+3f2,  U+3fa..U+3fb/2,  U+3fc..U+3ff,  U+400..U+40f->U+450..U+45f,  U+410..U+42f->U+430..U+44f,  U+430..U+45f,  U+460..U+481/2,  U+48a..U+4bf/2,  U+4c0,  U+4c1..U+4ce/2,  U+4d0..U+4f9/2,  U+500..U+50f/2,  U+531..U+556->U+561..U+586,  U+559,  U+561..U+587,  U+5d0..U+5ea,  U+5f0..U+5f2,  U+621..U+63a,  U+640..U+64a,  U+66e..U+66f,  U+671..U+6d3,  U+6d5,  U+6e5..U+6e6,  U+6ee..U+6ef,  U+6fa..U+6fc,  U+6ff,  U+e01..U+e30,  U+e32..U+e33,  U+e40..U+e46,  U+e81..U+e82,  U+e84,  U+e87..U+e88,  U+e8a,  U+e8d,  U+e94..U+e97,  U+e99..U+e9f,  U+ea1..U+ea3,  U+ea5,  U+ea7,  U+eaa..U+eab,  U+ead..U+eb0,  U+eb2..U+eb3,  U+ebd,  U+ec0..U+ec4,  U+ec6,  U+edc..U+edd,  U+1000..U+1021,  U+1023..U+1027,  U+1029..U+102a,  U+1050..U+1055,  U+10a0..U+10c5->U+2d00..U+2d25,  U+10d0..U+10fa,  U+10fc,  U+2d00..U+2d25,  U+1d00..U+1dbf,  U+1e00..U+1e95/2,  U+1e96..U+1e9b,  U+1ea0..U+1ef9/2,  U+3005..U+3006,  U+3031..U+3035,  U+303b..U+303c,  U+3041..U+3096,  U+309d..U+309f,  U+30a1..U+30fa,  U+30fc..U+30ff,  U+31f0..U+31ff
}

indexer
{
    mem_limit    = 32M
}

searchd
{
    listen            = 127.0.0.1:{searchd_port}
	binlog_path		= # disable logging
    read_timeout    = 5
    max_children    = 30
    pid_file        = {sphinx_path}/var/log/searchd.pid
    max_matches        = 100000
    log                = {sphinx_path}/var/log/searchd.log
    query_log        = {sphinx_path}/var/log/query.log
}

# --eof--
